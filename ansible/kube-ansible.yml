---
- hosts: control_plane,workers
  become: yes
  gather_facts: true

  tasks:
    - name: Create containerd config file
      file:
        path: "/etc/modules-load.d/containerd.conf"
        state: "touch"

    - name: Add conf for containerd
      blockinfile:
        path: "/etc/modules-load.d/containerd.conf"
        block: |
          overlay
          br_netfilter

    - name: modprobe
      shell: |
        sudo modprobe overlay
        sudo modprobe br_netfilter


    - name: Set system configurations for Kubernetes networking
      file:
        path: "/etc/sysctl.d/99-kubernetes-cri.conf"
        state: "touch"

    - name: Add conf for containerd
      blockinfile:
        path: "/etc/sysctl.d/99-kubernetes-cri.conf"
        block: |
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
          net.bridge.bridge-nf-call-ip6tables = 1

    - name: Apply new settings
      command: sudo sysctl --system

    - name: install containerd
      shell: |
        sudo apt-get update && sudo apt-get install -y containerd
        sudo mkdir -p /etc/containerd
        sudo containerd config default | sudo tee /etc/containerd/config.toml
        sudo systemctl restart containerd

    - name: Remove swapfile from /etc/fstab
      mount:
        name: swap
        fstype: swap
        state: absent

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: install python3-debian
      apt: name=python3-debian state=present 

    # - name: Add Kubernetes APT repository
    #   ansible.builtin.deb822_repository:
    #     name: kubernetes
    #     types: [deb]
    #     uris: "https://pkgs.k8s.io/core:/stable:/v1.26/deb/"
    #     signed_by: "https://pkgs.k8s.io/core:/stable:/v1.26/deb/Release.key"
    #     suites: [/]
    #     state: present
    #     enabled: yes
    - name: Ensure keyrings directory exists
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Kubernetes GPG key
      ansible.builtin.get_url:
        url: https://pkgs.k8s.io/core/stable/deb/Release.key
        dest: /etc/apt/keyrings/kubernetes-archive-keyring.gpg
        mode: '0644'

    - name: Add Kubernetes apt repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://pkgs.k8s.io/core/stable/deb/ stable main"
        filename: kubernetes
        state: present
        update_cache: yes

    - name: install kubelet
      apt:
        name: kubelet=1.26.11-1.1
        state: present
        update_cache: true
        force: yes

    - name: install kubeadm
      apt:
        name: kubeadm=1.26.11-1.1
        state: present
        force: yes
    
    - name: Restart service kubelet
      ansible.builtin.systemd_service:
        state: restarted
        daemon_reload: true
        name: kubelet

- hosts: control_plane
  become: yes
  tasks:
    - name: install kubectl
      apt:
        name: kubectl=1.26.11-1.1
        state: present
        force: yes

- hosts: control_plane
  become: yes
  tasks:
    - name: install helm
      shell: |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh

# - name: Install haproxy
#   hosts: lb
#   become: true
#   gather_facts: true
#   vars:
#     my_file: /etc/haproxy/haproxy.cfg
#     my_template: templates/haproxy.j2
#   tasks:
#     - name: gather facts from the control_plane
#       tags: [ 'control_plane' ]
#       setup:
#       delegate_to: "{{item}}"
#       delegate_facts: True
#       with_items: "{{groups['control_plane']}}"
#     - name: install haproxy
#       apt:
#         name: haproxy
#         state: present
#         update_cache: true
#         force: yes
#     - name: Stop haproxy service
#       service:
#         name: haproxy
#         state: stopped
#     - name: Create "{{ my_file }}"
#       ansible.builtin.template:
#         src: "{{ my_template }}"
#         dest: "{{ my_file }}"
#         owner: root
#         group: root
#         mode: "0644"
#     - name: start haproxy service
#       service:
#         name: haproxy
#         state: started
